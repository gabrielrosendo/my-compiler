To-Do List
Requirements: https://docs.google.com/document/d/1mUexL4rFo3SH2ms6porxyYbrrofqAq9Hs039YbdmfPA/edit

OPTIMIZERS ARE BROKEN
COMMENTED IT OUT FOR NOW TO WORK ON CODE GENERATOR

TAC GENERATOR WORKS ONLY WHEN THERE IS ONLY A MAIN FUNCTION
FUNCTION BST DOES NOT STORE RELEVANT INFO?

1. Parser & Lexer Enhancements
   - [X] Add function handling to parser and lexer.

2. Update and Reflect Changes
   - [ ] Reflect changes in parser to:
     - Abstract Syntax Tree (AST)
     - Optimizer
     - Code Generator

3. Type Handling
   - [ ] Add typecasting by default.
   - Add floats and other types
     - Example:
       Expr: ID BinOp ID {...}
            | LPAREN TYPE RPAREN ID BinOp LPAREN TYPE RPAREN ID {...}
   - [ ] Decide between type coercion or explicit casting.

4. Optimization of Functions and Calls
   - [ ] Apply previously discussed optimizations inside function definitions:
     - Peephole optimization
     - Dead code elimination
        - Detect functions defined but never called

5. Array Support
   - [ ] Add support for arrays.
     - [ ] Array size is pre-defined?
     - [ ] Use a symbol table to store array names and lengths.
     - [ ] Implement different scopes in the symbol table.

6. Arithmetic and Operator Precedence
   - [X] Add support for `/` and `*`.
   - [ ] Ensure operator precedence rules are followed.
     - Reference: https://web.mit.edu/gnu/doc/html/bison_8.html#:~:text=The%20Bison%20precedence%20declarations%2C%20%25left,the%20%25prec%20modifier%20for%20rules.&text=and%20it%20is%20written%20after%20the%20components%20of%20the%20rule

7. Function Declaration & Error Handling
   - [X] Support declaring and calling functions.
   - **FIXED** FUNCTION DOES NOT WORK WITH DIRECT NUMBER INPUT AS OF NOW, EX:
            * x = addOne(5) does not work but x = addOne(b) works if b was declared
            * Change it so when a function is called on a int, a variable is created for that
